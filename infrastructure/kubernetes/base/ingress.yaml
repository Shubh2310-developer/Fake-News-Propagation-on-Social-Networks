apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fake-news-ingress
  labels:
    app: fake-news-platform
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "5"

    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options DENY always;
      add_header X-Content-Type-Options nosniff always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss:;" always;

    # SSL/TLS configuration (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: http01

spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - fake-news-platform.com
    - api.fake-news-platform.com
    secretName: fake-news-tls

  rules:
  # Frontend routing
  - host: fake-news-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fake-news-frontend-service
            port:
              number: 3000

  # API routing
  - host: api.fake-news-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fake-news-backend-service
            port:
              number: 8000

  # Alternative API routing on same domain
  - host: fake-news-platform.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: fake-news-backend-service
            port:
              number: 8000

---
# Ingress for staging environment
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fake-news-staging-ingress
  labels:
    app: fake-news-platform
    environment: staging
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit-connections: "5"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "2"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"

spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - staging.fake-news-platform.com
    - api-staging.fake-news-platform.com
    secretName: fake-news-staging-tls

  rules:
  # Staging frontend
  - host: staging.fake-news-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fake-news-frontend-service
            port:
              number: 3000

  # Staging API
  - host: api-staging.fake-news-platform.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fake-news-backend-service
            port:
              number: 8000

---
# Internal ingress for admin access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fake-news-admin-ingress
  labels:
    app: fake-news-platform
    access: admin
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # IP whitelist for admin access
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    # Basic authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: admin-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Admin Access Required"

spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - admin.fake-news-platform.com
    secretName: fake-news-admin-tls

  rules:
  - host: admin.fake-news-platform.com
    http:
      paths:
      # Admin dashboard (if implemented)
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: fake-news-backend-service
            port:
              number: 8000
      # Database admin (if pgAdmin is deployed)
      - path: /pgadmin
        pathType: Prefix
        backend:
          service:
            name: pgadmin-service
            port:
              number: 80
      # Monitoring dashboards
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000